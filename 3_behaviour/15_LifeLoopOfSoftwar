1. Planning and Requirement Analysis
Участники:
-Старшие члены команды -> Бизнес аналитик Проджект Овнер
-Отдел Продаж -> Предлогает клиенту и обосновывает доцельность ввидения для клиента
-Отдел иследования рынка -> Находит минусы рынка в ктороых команда может приуспеть в этой сфере или + рынка в которых
команда не сможет конкурировать.
-Эксперты в данной области -> Консультируют и развеювают свомнения в некоторых абстрактных вопросов построения архетиктуры.
-Клиент -> Вносит Ясность в написаное им ТЗ и уточняяет интересуюшие принцыпы работы заказываемого материала.

Результат Этапа:
Статестически-аналитический отчет о различных технических подходах которые можно применить к данному проекту, оценка
рисков и гипотетической возможности прогореть.
========================================================================================================================
2. Defining Requirements:
Четкое определение и документирование ТЗ
Утверждение с заказчиком и подписание договора

используется метод SRS - Software Requirement Specification  содержит требование к продукту которые должны быть выполнены
 к определенному этапу разработки проекта
========================================================================================================================
3. Designing The Product Architecture
Solution Architect

При разработки архетектуры документируется в DDS Design Document Specification

На основании:
-Оценки риска
-Надежность продука
-Модульность системы
-Издержки на использование
-Временные ограничения

Выбирается наилучший подход к проектированию архитектурных модулей продуктов и подбор лучшего и оптимального способа
связи со смежными системаи

Прописывается и определяется внешний вид внутрений дизайн
========================================================================================================================
4. Building Or Developing The Product
Учасники Команда разроботчиков.
Разработка проекта по плану заложенному в SRS на технологиях которые были заложены на 3 этапе планирования архитектуры.

После написания фичи именно команда разроботчиков прокрывает интеграциоными тестами новоиспеченный продукт.

5. Testing The Product
Участники Отдел тестирования в последствии ощибок -> команда разроботчиков
Происходит процесс
-Нахождения
-Регистрации
-Отслеживания
-Отправляются обратно команде разработчиков
-Испровляются и проходят повторное тестирование
========================================================================================================================
6. Deployment In The Market And Maintenance

Развертывание проекта и его потдержка. Релизится и идет в продакшен.
User Accepting Testing


------------------------------------------------------------------------------------------------------------------------
SDLC Models:
-Waterfall Model
    Все шаги жизненого цикла идут последовательно (Analysis->Defining Requirements->Designing The Product Architecture->Building Or Developing The Product->Testing The Product->Deployment In The Market And Maintenance)
    Плюсы:
        +Хорошая документированость
        +Полная зашишенность каждой команды от безобразия и подстав со стороны других команд.
        +Практически неизменяиемые первоначальные требования к продукти и его виду.
    Минусы:
        -Долгий старт
        -Долгий процесс разроботки.
        -Долгий простой отдельных команд в ожидании завершения работы предидушей команды
        -Высокая стоимость содержания всего штата
        -При внесения изменений приходится откатываться к шагу написанию документации и проходить все этапы заново
         что ухудшает гибкость.
------------------------------------------------------------------------------------------------------------------------
-Iterative Model
    Изменения вностяться небольшими порциями за маленькие промежутки временни (Итерациями)
    Разрабатывается базовый продукт а потом нарабатывается улучшения по разным направлениям

    Жизненый цмкл
                                                   Defining Requirements
                                    /                       |                                \
Designing The Product Architecture       | Designing The Product Architecture       | Designing The Product Architecture
Building Or Developing The Product       | Building Or Developing The Product       | Building Or Developing The Product
Testing The Product                      |       Testing The Product                |         Testing The Product
Deployment In The Market And Maintenance | Deployment In The Market And Maintenance | Deployment In The Market And Maintenance

    Плюсы:
            + Быстрота изменений и гибкость
            + Невысокие риски
            + уменьшиные растраты на штат так как разные ветки изменений могут делать одна и таже команда
        Минусы:
            -Требуется высокий скил и вовлеченность команды
            -Постоянное и активное участие Продукт менеджера и Тестировшиков
            -Умение быстро адаптироваться под новые условия

------------------------------------------------------------------------------------------------------------------------
-V-Model
    раширение для модели Waterfall Model тоесть все этапы проходят последовательно но к каждому этапу добовляется этап тестирования
    Жизненый цикл выглядит как буква V

VERIFICATION                           v                       VALIDATION
            \                                               /
    |REQUIREMENT DESIGN|<---------------------------->|ACCEPTANCE TESTING|
                \                                       /
            |SYSTEM DESIGN|<--------------------->|SYSTEM TESTING|
                    \                               /
                |SOFTWARE DESIGN|<------------>|INTEGRATION TESTING|
                        \                       /
                    |MODULE DESIGN|<----->|UNIT TEST|
                            \               /
                             -> |CODING| ->

        Плюсы:
            + Выявление проблем на начальных этапах
            + Процес тестирования занимает меньше времени перед релизом
            +
        Минусы:
            - Не подходит для длительных проектов
            - Не подходит для гибких проектов
            - Значительное торможение каждого этапа больше чем при Waterfall Model
------------------------------------------------------------------------------------------------------------------------
-Spiral Model
------------------------------------------------------------------------------------------------------------------------
-Big Bang Model
------------------------------------------------------------------------------------------------------------------------
-Agile Model
------------------------------------------------------------------------------------------------------------------------
-RAD Model
------------------------------------------------------------------------------------------------------------------------

